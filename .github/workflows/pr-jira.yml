on:
  pull_request:
    types: [reopened]
    branches:
      - master

name: Create Jira task when pull request creation

jobs:
  build:
    runs-on: ubuntu-latest
    name: Create Jira task when pull request creation
    steps:
      - name: Create Issue
        id: create
        run: |
          versions=$(curl -X GET \
            --url ${{ secrets.JIRA_BASE_URL }}/rest/api/3/project/NE/versions \
            --user ${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }} \
            --header Accept:application/json)

          versionId=$(printf '%s' "$versions" | jq -r 'map(select(.name | startswith("Noodoe App - Cloud")))[0].id')

          res=$(curl -s -X POST \
            --url ${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue \
            --user ${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }} \
            --header Accept:application/json \
            --header Content-Type:application/json \
            --data '{
              "transition": {
                "id": "91"
              },
              "fields": {
                "summary": "${{ github.event.pull_request.title }}",
                "project": {
                  "key": "NE"
                },
                "issuetype": {
                  "name": "Task"
                },
                "components": [
                  {
                    "name": "Cloud - Noodoe App"
                  }
                ],
                "fixVersions": [
                  {
                    "id": "'"${versionId}"'"
                  }
                ],
                "description": {
                  "type": "doc",
                  "version": 1,
                  "content": [
                    {
                      {
                        "type": "blockCard",
                        "attrs": {
                          "url": "${{ github.event.pull_request.url }}"
                        }
                      }
                    }
                  ]
                }
              }
            }')
          echo "$res"
          echo "::set-output name=key::$(printf %s "$res" | jq -r '.key')"
          echo "::set-output name=id::$(printf %s "$res" | jq -r '.id')"
      
      - name: Move issue to active sprint
        run: |
          res=$(curl -X GET \
            --url "${{ secrets.JIRA_BASE_URL }}/rest/agile/1.0/board/30/sprint?state=active" \
            --user ${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }} \
            --header Accept:application/json)

          sprintId=$(printf %s "$res" | jq ".values[0].id")

          curl -X POST \
            --url "${{ secrets.JIRA_BASE_URL }}/rest/agile/1.0/sprint/${sprintId}/issue" \
            --user ${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }} \
            --header Accept:application/json \
            --header Content-Type:application/json \
            --data '{
              "issues": [
                "${{ steps.create.outputs.key }}"
              ]
            }'

      - name: Rename pull request title
        uses: tzkhan/pr-update-action@master
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          branch-regex: .
          lowercase-branch: false
          title-template: '[${{ steps.create.outputs.key }}]' 
          replace-title: false
          title-prefix-space: true
          uppercase-title: true
          body-template: '[${{ steps.create.outputs.key }}](https://noodoe.atlassian.net/browse/${{ steps.create.outputs.key }})'
          replace-body: false
          body-prefix-newline-count: 2
          uppercase-body: true
