on:
  pull_request:
    types: [opened]
    branches:
      - master

name: Create Jira issue when pull request if none detection

jobs:
  build:
    runs-on: ubuntu-latest
    name: Create Jira issue when pull request if none detection
    if: !startsWith(github.event.pull_request.title, '[secrets.JIRA_PROJECT_NAME -')
    steps:
      - name: Create Issue
        id: create
        run: |
          versions=$(curl -X GET \
            --url ${{ secrets.JIRA_BASE_URL }}/rest/api/3/project/${{ secrets.JIRA_PROJECT_NAME }}/versions \
            --user ${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }} \
            --header Accept:application/json)

          versionId=$(printf '%s' "$versions" | jq -r \
            'map(select(.name | startswith("${{ secrets.JIRA_VERSION_PREFIX }}")))[0].id')

          res=$(curl -s -X POST \
            --url ${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue \
            --user ${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }} \
            --header Accept:application/json \
            --header Content-Type:application/json \
            --data '{
              "fields": {
                "summary": "${{ github.event.pull_request.title }}",
                "project": {
                  "key": "${{ secrets.JIRA_PROJECT_NAME }}"
                },
                "issuetype": {
                  "name": "Task"
                },
                "components": [
                  {
                    "name": "${{ secrets.JIRA_COMPONENT_NAME }}"
                  }
                ],
                "fixVersions": [
                  {
                    "id": "'"${versionId}"'"
                  }
                ]
              }
            }')

          echo "::set-output name=key::$(printf %s "$res" | jq -r '.key')"
          echo "::set-output name=id::$(printf %s "$res" | jq -r '.id')"
      
      - name: Transit the issue
        run: |
          transitions=$(curl -X GET \
            --url ${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/${{ steps.create.outputs.key }}/transitions \
            --user ${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }} \
            --header Accept:application/json)

          transitionId=$(printf '%s' "$transitions" | jq -r '.transitions | \
            map(select(.name | startswith("${{ secrets.JIRA_PR_TRANSITION_NAME }}")))[0].id')

          curl -X POST \
            --url ${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/${{ steps.issue.outputs.key }}/transitions \
            --user ${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }} \
            --header Accept:application/json \
            --header Content-Type:application/json \
            --data '{
              "transition": {
                "id": "'"${transitionId}"'"
              }
            }'

      - name: comment pull request link
        run: |
          curl -X POST \
            --url ${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/${{ steps.create.outputs.key }}/comment \
            --user ${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }} \
            --header Accept:application/json \
            --header Content-Type:application/json \
            --data '{
              "body": {
                "type": "doc",
                "version": 1,
                "content": [
                  {
                    "type": "blockCard",
                    "attrs": {
                      "url": "${{ github.event.pull_request.html_url }}"
                    }
                  }
                ]
              }
            }'
      
      - name: Move issue to active sprint
        run: |
          boards=$(curl --request GET \
          --url ${{ secrets.JIRA_BASE_URL }}/rest/agile/1.0/board \
          --user ${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }} \
          --header 'Accept: application/json')

          boardId=$(printf '%s' "$boards" | jq -r '.value | map(select(.name | startswith("NE board")))[0].id')

          res=$(curl -X GET \
            --url "${{ secrets.JIRA_BASE_URL }}/rest/agile/1.0/board/${{ secrets.JIRA_BOARD_ID }}/sprint?state=active" \
            --user ${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }} \
            --header Accept:application/json)

          sprintId=$(printf %s "$res" | jq ".values[0].id")

          curl -X POST \
            --url "${{ secrets.JIRA_BASE_URL }}/rest/agile/1.0/sprint/${sprintId}/issue" \
            --user ${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }} \
            --header Accept:application/json \
            --header Content-Type:application/json \
            --data '{
              "issues": [
                "${{ steps.create.outputs.key }}"
              ]
            }'

      - name: Rename pull request title
        uses: tzkhan/pr-update-action@master
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          branch-regex: .
          lowercase-branch: false
          title-template: '[${{ steps.create.outputs.key }}]' 
          replace-title: false
          title-prefix-space: true
          uppercase-title: true
          body-template: '[${{ steps.create.outputs.key }}](${{ secrets.JIRA_BASE_URL }}/browse/${{ steps.create.outputs.key }})'
          replace-body: false
          body-prefix-newline-count: 2
          uppercase-body: true
